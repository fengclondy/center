<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.htd.goodscenter.dao.ItemBrandDAO">
	<resultMap id="itemBrandMapper" type="cn.htd.goodscenter.domain.ItemBrand">
		<result property="brandId" column="brand_id" />
		<result property="brandName" column="brand_name" />
		<result property="brandLogoUrl" column="brand_logo_url" />
		<result property="brandStatus" column="brand_status" />
		<result property="brandKey" column="brand_key" />
		<result property="erpStatus" column="erp_status" />
		<result property="erpDownTime" column="erp_down_time" />
		<result property="erpErrorMsg" column="erp_error_msg" />
		<result property="createId" column="create_id"/>
		<result property="createName" column="create_name" />
		<result property="createTime" column="create_time" />
		<result property="modifyId" column="modify_id"/>
		<result property="modifyName" column="modify_name" />
		<result property="modifyTime" column="modify_time" />
	</resultMap>
	
	<resultMap id="itemBrandDTO" type="cn.htd.goodscenter.dto.ItemBrandDTO">
		<result property="brandId" column="brand_id" />
		<result property="brandName" column="brand_name" />
		<result property="brandLogoUrl" column="brand_logo_url" />
		<result property="brandStatus" column="brand_status" />
		<result property="erpStatus" column="erp_status" />
		<result property="erpDownTime" column="erp_down_time" />
		<result property="erpErrorMsg" column="erp_error_msg" />
		<result property="brandKey" column="brand_key" />
		<result property="createId" column="create_id"/>
		<result property="createName" column="create_name" />
		<result property="createTime" column="create_time" />
		<result property="modifyId" column="modify_id"/>
		<result property="modifyName" column="modify_name" />
		<result property="modifyTime" column="modify_time" />
		<result property="categoryName" column="c_name" />
		<result property="thirdLevCid" column="third_lev_cid"/>
	</resultMap>
	
	
	<sql id="selectAllColumns">
		<![CDATA[
		select
		  *
		from 
			item_brand
		]]>
	</sql>
	
	<!-- mysql 分页尾 -->
	<sql id="pagination_tail">
      <if test="page != null">
	  	limit #{page.pageOffset} , #{page.rows}
	  </if>
	</sql>
	
	<!-- 根据id查询品牌数据 -->
	<select id="queryBrandByIds" resultMap="itemBrandDTO">
		select * from item_brand
		<if test=" list != null and list.size() > 0 ">
			where brand_id in 
			<foreach item="brandId" index="index" collection="list" open="(" separator="," close=")">  
			  #{brandId}  
			</foreach>
		</if>
	</select>
	
	<!-- 查询品牌列表分页数据 -->
	<select id="queryBrandByIdsWithPage" resultMap="itemBrandDTO">
		select * from item_brand
		<include refid="pagination_tail" />
	</select>
	
	<select id="queryPage" resultType="map">
		select * from item_brand
	</select>
	
	<select id="findById" resultMap="itemBrandMapper" >
		select * from item_brand
		where id = #{id}
	</select>

	<select id="queryById" resultMap="itemBrandMapper" >
		select * from item_brand
		where brand_id = #{id}
	</select>

	<select id="queryByName" resultMap="itemBrandMapper" >
		select * from item_brand
		where brand_name = #{brandName}
	</select>

	<insert id="add" keyProperty="brandId" useGeneratedKeys="true">
		insert into item_brand(
				brand_name,
				brand_logo_url,
				brand_status,
				brand_key,
		        erp_status,
				create_id,
				create_name,
				create_time
		)values(
				#{brandName},
				#{brandLogoUrl},
				1,
				#{brandKey},
				#{erpStatus},
				#{createId},
		        #{createName},
				now()
		)
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="brandId">
			select @@IDENTITY
		</selectKey>
	</insert>
	
	<select id="queryCount" resultType="java.lang.Long">
		select count(1) from item_brand  
	</select>
	
	<update id="update" parameterType="cn.htd.goodscenter.domain.ItemBrand">
		update item_brand
		<trim prefix="SET" suffixOverrides=",">
			<if test="brandName != null and brandName != ''">
				brand_name = #{brandName},
			</if>
			<if test="brandLogoUrl != null and brandLogoUrl != ''">
				brand_logo_url = #{brandLogoUrl},
			</if>
			<if test="brandStatus != null">
				brand_status = #{brandStatus},
			</if>
			<if test="erpStatus != null">
				erp_status = #{erpStatus},
			</if>
			<if test="erpDownTime != null">
				erp_down_time = #{erpDownTime},
			</if>
			<if test="erpErrorMsg != null">
				erp_error_msg = #{erpErrorMsg},
			</if>
			modify_id = #{modifyId},
			modify_name = #{modifyName},
			modify_time = now()
		</trim>
		where
		brand_id = #{brandId}
	</update>

	<update id="updateStatus">
		update
		item_brand
		set
			brand_status = 0,
			modify_id = #{modifyId},
			modify_name = #{modifyName},
			modify_time = now()
		where
			brand_id = #{brandId}
	</update>
	<delete id="delete"><!-- TODO ：2？ -->
		update item_brand
		set brand_status = 0,
			modify_id = #{modifyId},
			modify_name #{modifyName},
			modify_time = now()
		<if test=" codes != null and codes.size() > 0 ">
			where id in
			<foreach collection="codes" open="(" separator="," close=")" item="code">
				#{code}
			</foreach>
		</if>
		<if test=" codes == null or codes.size() == 0 ">
			where 1 = 3
		</if>
	</delete>
	
	<select id="findAll" resultType="map">
		select * from item_brand
	</select>
	
	
	<!-- 分页查询 -->
	<select id="queryItemBrandAllList" resultMap="itemBrandDTO">
		<include refid="selectAllColumns"/>
		WHERE
		brand_status = 1
		<include refid="pagination_tail" />
	</select>
	
	<!-- 根据类目id查询品牌列表 -->
	<select id="queryBrandListByCategoryId" resultMap="itemBrandDTO">
		select
		a.brand_id,
		a.brand_name,
		a.brand_logo_url,
		a.brand_status,
		a.create_time,
		a.modify_time,
		b.third_lev_cid,
		c.c_name
		from
		item_brand a,
		item_category_brand b,
		item_category c
		where
		a.brand_id=b.brand_id
		and c.cid = b.third_lev_cid
		and a.brand_status = 1
		and b.cbrand_status = 1
		and c.status = 1
		and b.third_lev_cid = #{entity.thirdCid}
		<if test="entity.isIgnoreErpStatus != 1">
			and a.erp_status = 4
		</if>
	</select>
	
	<!-- 根据品牌id查询是否和类目关联 -->
	<select id="queryBrandCategoryById" resultMap="itemBrandDTO">
		select a.brand_id,a.brand_name,a.brand_logo_url,a.brand_status,a.create_time,a.modify_time
		from item_brand a , item_category_brand b where a.brand_id=b.brand_id and a.brand_id =#{brandId}  and brand_status=1 and cbrand_status=1
	</select>
	
	<select id="queryBrandList" resultMap="itemBrandDTO">
		select * From item_brand  where 1=1
		<if test="entity!=null">
			<if test="entity.brandKey!=null">
				and brand_Key=#{entity.brandKey}
			</if>
			<if test="entity.brandName!=null">
				and brand_name like CONCAT('%',#{entity.brandName},'%' )
			</if>
			<if test="entity.brandStatus!=null">
				and brand_status=#{entity.brandStatus}
			</if>
			
		</if>
		<if test="page!=null">
			 limit #{page.pageOffset} , #{page.rows}
		</if>
	</select>
	<select id="queryCountBrandList" resultType="java.lang.Long">
		select count(1) From item_brand  where 1=1
		<if test="entity!=null">
			<if test="entity.brandKey!=null">
				and brand_Key=#{entity.brandKey}
			</if>
			<if test="entity.brandName!=null">
				and brand_name like CONCAT('%',#{entity.brandName},'%' )
			</if>
			<if test="entity.brandStatus!=null">
				and brand_status=#{entity.brandStatus}
			</if>
		</if>
	</select>
	
	<delete id="deleteItemBrand">
		update item_category_brand
		set cbrand_status = 0
		where
		third_lev_cid=#{cid}
		and brand_id=#{brandId}
	</delete>
	
	<select id="queryBrandBySyncTime" resultMap="itemBrandMapper">
		select * from item_brand where modified >= #{syncTime}
	</select>

	<select id="selectErpFailBrandList" parameterType="map" resultMap="itemBrandMapper">
		SELECT * FROM item_brand
		WHERE
		erp_status = #{erpStatus}
		AND mod(brand_id, #{taskQueueNum}) in
		<foreach collection="taskIdList" index="index" item="taskId" open="(" separator="," close=")">
			#{taskId}
		</foreach>
		LIMIT 0, #{rows}
	</select>

	<select id="selectBrandList" parameterType="map" resultMap="itemBrandMapper">
		SELECT * FROM item_brand
		WHERE
		mod(brand_id, #{taskQueueNum}) in
		<foreach collection="taskIdList" index="index" item="taskId" open="(" separator="," close=")">
			#{taskId}
		</foreach>
	</select>

	<!-- 只有erp状态是失败的才能更新为处理中 -->
	<update id="updateForTask" parameterType="cn.htd.goodscenter.domain.ItemBrand">
		update item_brand
			<trim prefix="SET" suffixOverrides=",">
			<if test="erpStatus != null">
				erp_status = #{erpStatus},
				</if>
			modify_id = #{modifyId},
			modify_name = #{modifyName},
			modify_time = now()
		</trim>
		where
		brand_id = #{brandId}
		AND erp_status = 3
	</update>

	<select id="selectErpExceptionCount" resultType="Long">
		select
			count(1)
		from item_brand
		where
			erp_status != 4
			<if test="queryBrandErpExceptionInDto.erpStatus != null">
				AND erp_status = #{queryBrandErpExceptionInDto.erpStatus}
			</if>
			<if test="queryBrandErpExceptionInDto.period != null">
				 <![CDATA[ AND erp_down_time < #{queryBrandErpExceptionInDto.limitTime} ]]>
			</if>
	</select>

	<select id="selectErpExceptionList" resultMap="itemBrandMapper">
		select
			*
		from
			item_brand
		where erp_status != 4
		<if test="queryBrandErpExceptionInDto.erpStatus != null">
			AND erp_status = #{queryBrandErpExceptionInDto.erpStatus}
		</if>
		<if test="queryBrandErpExceptionInDto.period != null">
			<![CDATA[ AND erp_down_time < #{queryBrandErpExceptionInDto.limitTime} ]]>
		</if>
		<include refid="pagination_tail"/>
	</select>

	<select id="selectByBrandName" resultMap="itemBrandDTO">
		SELECT * from
			item_brand
		WHERE
			brand_name = #{brandName}
			and brand_status = 1
	</select>

	<select id="queryBrandList4SuperBoss" resultMap="itemBrandDTO">
		select * From item_brand  where 1=1
			<if test="entity!=null">
			<if test="entity.startTime != null and entity.endTime != null">
				and
				(
				modify_time BETWEEN #{entity.startTime}  AND #{entity.endTime}
				OR
				create_time BETWEEN #{entity.startTime}  AND #{entity.endTime}
				)
			</if>
		</if>
		<if test="page!=null">
			limit #{page.pageOffset} , #{page.rows}
		</if>
	</select>

	<select id="queryCountBrandList4SuperBoss" resultType="long">
		SELECT count(1) From item_brand  where 1=1
		<if test="entity!=null">
			<if test="entity.startTime != null and entity.endTime != null">
				and
				(
				modify_time BETWEEN #{entity.startTime}  AND #{entity.endTime}
				OR
				create_time BETWEEN #{entity.startTime}  AND #{entity.endTime}
				)
			</if>
		</if>
	</select>
</mapper>