<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.htd.membercenter.dao.ContractDAO">
  	<!-- 查询该会员店和当前具有包厢关系的供应商下已签订的合同 -->
	<select id="queryContractBymemberCode" resultType="cn.htd.membercenter.dto.ContractInfoDTO">
		SELECT
			sci.contract_id AS contractId,
			sci.contract_code AS contractCode,
			sci.contract_status AS contractStatus,
			sci.sign_time AS signTime,
			#{memberCode} AS memberCode,
			mbi.member_code AS vendorCode,
			sci.contract_url AS contractUrl,
			sci.contract_credit AS contractCredit,
			sci.contract_title AS contractTitle,
			mci.location_addr AS vendorLocationAddr,
			mci.artificial_person_name AS vendorArtificialPersonName,
			mci.company_name AS vendorName,
			a.memberLocationAddr,
			a.memberArtificialPersonName,
			a.memberName
		FROM
			(
				SELECT
					mci1.location_addr AS memberLocationAddr,
					mci1.artificial_person_name AS memberArtificialPersonName,
					mci1.company_name AS memberName
				FROM
					member_company_info mci1,
					member_base_info mbi1
				WHERE
					mbi1.member_code = #{memberCode}
				AND mbi1.id = mci1.member_id
				AND mci1.buyer_seller_type = 1
			) a,
			member_base_info mbi
		LEFT JOIN member_company_info mci ON mci.member_id = mbi.id AND mci.buyer_seller_type = 2
		LEFT JOIN supply_contract_info sci ON mbi.member_code = sci.vendor_code and sci.member_code = #{memberCode}
		WHERE
		mbi.member_code IN 
			<foreach collection = "vendorCodeList" index = "index" item = "item" open = "(" separator = "," close = ")" >
				#{item}
			</foreach>
	</select>
	<!-- 查询该会员店和当前具有包厢关系的供应商下已签订的合同 -->
	<select id="queryContractBymemberCodeAndVendorCodeList" resultType="cn.htd.membercenter.dto.ContractInfoDTO">
		<!-- 若是使用erp供应商编码 启用以下代码 -->
		<!-- SELECT
			sci.contract_id AS contractId,
			sci.contract_code AS contractCode,
			sci.contract_status AS contractStatus,
			sci.sign_time AS signTime,
			sci.member_code AS memberCode,
			sci.vendor_code AS vendorCode,
			sci.contract_url AS contractUrl,
			sci.contract_credit AS contractCredit,
			sci.contract_title AS contractTitle,
			mci.location_addr AS vendorLocationAddr,
			mci.artificial_person_name AS vendorArtificialPersonName,
			mci.company_name AS vendorName,
			a.memberLocationAddr,
			a.memberArtificialPersonName,
			a.memberName
		FROM
			(
				SELECT
					mci1.location_addr AS memberLocationAddr,
					mci1.artificial_person_name AS memberArtificialPersonName,
					mci1.company_name AS memberName
				FROM
					member_company_info mci1,
					member_base_info mbi1
				WHERE
					mbi1.member_code = #{memberCode}
				AND mbi1.id = mci1.member_id
				AND mci1.buyer_seller_type = 1
			) a,
			member_base_info mbi
		LEFT JOIN member_company_info mci ON mci.member_id = mbi.id
		LEFT JOIN supply_contract_info sci ON mbi.member_code = sci.vendor_code and sci.member_code = #{memberCode}
		WHERE
		mci.buyer_seller_type = 2
		AND mci.company_code IN
			<foreach collection = "erpVendorCodeList" index = "index" item = "item" open = "(" separator = "," close = ")" >
				#{item}
			</foreach> -->
		<!-- 若是传供应商编码 启用以下代码  -->
		SELECT
			sci.contract_id AS contractId,
			sci.contract_code AS contractCode,
			sci.contract_status AS contractStatus,
			sci.sign_time AS signTime,
			sci.member_code AS memberCode,
			mbi.member_code AS vendorCode,
			sci.contract_url AS contractUrl,
			sci.contract_credit AS contractCredit,
			sci.contract_title AS contractTitle,
			mci.location_addr AS vendorLocationAddr,
			mci.artificial_person_name AS vendorArtificialPersonName,
			mci.company_name AS vendorName,
			a.memberLocationAddr,
			a.memberArtificialPersonName,
			a.memberName
		FROM
			(
				SELECT
					mci1.location_addr AS memberLocationAddr,
					mci1.artificial_person_name AS memberArtificialPersonName,
					mci1.company_name AS memberName
				FROM
					member_company_info mci1,
					member_base_info mbi1
				WHERE
					mbi1.member_code = #{memberCode}
				AND mbi1.id = mci1.member_id
				AND mci1.buyer_seller_type = 1
			) a,
			member_base_info mbi
		LEFT JOIN member_company_info mci ON mci.member_id = mbi.id AND mci.buyer_seller_type = 2
		LEFT JOIN supply_contract_info sci ON mbi.member_code = sci.vendor_code and sci.member_code = #{memberCode}
		WHERE
		mbi.member_code IN 
			<foreach collection = "vendorCodeList" index = "index" item = "item" open = "(" separator = "," close = ")" >
				#{item}
			</foreach> 
	</select>
	<!-- 查询该会员店是否需要提醒 -->
	<select id="queryRemindFlagByMemberCode" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT
			is_need_remind
		FROM
			supply_contract_sign_remind scsr
		WHERE
			scsr.member_code = #{memberCode}
	</select>
	<!-- 新增一条会员店提醒记录 -->
	<insert id="insertContractSignRemindInfo" parameterType="cn.htd.membercenter.dto.ContractSignRemindInfoDTO">
		INSERT INTO
			supply_contract_sign_remind (
				is_need_remind,
				member_code,
				create_id,
				create_name,
				create_time,
				modify_id,
				modify_name,
				modify_time)
		VALUES
			(
				#{isNeedRemind},
				#{memberCode},
				#{createId},
				#{createName},
				NOW(),
				#{modifyId},
				#{modifyName},
				NOW()
			)
	</insert>
	<!-- 更新一条会员店提醒记录 -->
	<update id="updateContractSignRemindInfo" parameterType="cn.htd.membercenter.dto.ContractSignRemindInfoDTO">
		UPDATE supply_contract_sign_remind
			SET is_need_remind = #{isNeedRemind},
			modify_id = #{modifyId},
			modify_name = #{modifyName},
			modify_time = NOW()
		WHERE
			member_code = #{memberCode}
	</update>
	<!-- 根据会员店编码和供货商编码查询合同签订状态 -->
	<select id="queryContractStatus" resultType="java.lang.Integer">
		SELECT
			contract_status
		FROM
			supply_contract_info sci
		WHERE
			sci.vendor_code = #{vendorCode}
			AND sci.member_code = #{memberCode}
	</select>
	<!-- 查询该供应商和一部分会员店下已签订的合同 -->
	<select id="queryContractInfoListByMemberAndVendorCode" resultType="cn.htd.membercenter.dto.ContractInfoDTO">
		SELECT
			sci.contract_id AS contractId,
			sci.contract_code AS contractCode,
			sci.contract_status AS contractStatus,
			sci.sign_time AS signTime,
			sci.member_code AS memberCode,
			sci.vendor_code AS vendorCode,
			sci.contract_url AS contractUrl,
			sci.contract_credit AS contractCredit,
			sci.contract_title AS contractTitle,
			mci.location_addr AS memberLocationAddr,
			mci.artificial_person_name AS memberArtificialPersonName,
			mci.company_name AS memberName,
			a.vendorLocationAddr,
			a.vendorArtificialPersonName,
			a.vendorName
		FROM
			(
				SELECT
					mci1.location_addr AS vendorLocationAddr,
					mci1.artificial_person_name AS vendorArtificialPersonName,
					mci1.company_name AS vendorName
				FROM
					member_company_info mci1
				WHERE
					mci1.company_code = #{vendorCode}
				AND mci1.buyer_seller_type = 2
			) a,
			supply_contract_info sci
		LEFT JOIN member_base_info mbi ON mbi.member_code = sci.member_code
		LEFT JOIN member_company_info mci ON mci.member_id = mbi.id AND mci.buyer_seller_type = 1
		WHERE
			sci.vendor_code = (
				SELECT
					mbi2.member_code 
				FROM
					member_base_info mbi2,
					member_company_info mci2 
				WHERE
					mbi2.id = mci2.member_id 
					AND mci2.company_code = #{vendorCode}
			)
		AND sci.contract_status = '1'
		AND sci.member_code IN 
			<foreach collection = "memberCodeList" index = "index" item = "item" open = "(" separator = "," close = ")" >
				#{item}
			</foreach>
	</select>
	<!-- 新建一条合同记录 -->
	<insert id="insertContractInfo" parameterType="cn.htd.membercenter.dto.SaveContractInfoDTO">
		INSERT INTO supply_contract_info (
			contract_code,
			contract_status,
			sign_time,
			sign_author_code,
			sign_author_name,
			sign_start_time,
			sign_end_time,
			member_code,
			vendor_code,
			create_id,
			create_name,
			create_time,
			modify_id,
			modify_name,
			modify_time,
			contract_url,
			contract_title,
			contract_credit
		)
		VALUES
			<foreach collection = "saveContractInfoList" index = "index" item = "item" open = "" separator = "," close = "" >
				(
				#{item.contractCode},
				#{item.contractStatus},
				NOW(),
				#{item.signAuthorCode},
				#{item.signAuthorName},
				NOW(),
				(select date_add(NOW(),interval 100 year)),
				#{item.memberCode},
				#{item.vendorCode},
				#{item.createId},
				#{item.createName},
				NOW(),
				#{item.modifyId},
				#{item.modifyName},
				NOW(),
				<if test="item.contractUrl == '' or item.contractUrl == null">
					'contractURLDefaultValue',
				</if>
				<if test="item.contractUrl != '' and item.contractUrl != null">
					#{item.contractUrl},
				</if>
				<if test="item.contractTitle == '' or item.contractTitle == null">
					'contractTitleDefaultValue',
				</if>
				<if test="item.contractTitle != '' and item.contractTitle != null">
					#{item.contractTitle},
				</if>
				<if test="item.contractCredit == null">
					0.0
				</if>
				<if test="item.contractCredit != null">
					#{item.contractCredit}
				</if>
				)
			</foreach>
	</insert>
</mapper>