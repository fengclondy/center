<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.htd.membercenter.dao.MemberGradeDAO">

	<!-- 根据会员名称，手机号，会员类型，账号类型查询会员等级分页信息 -->
	<select id="queryMemberGradeListInfo" resultType="cn.htd.membercenter.dto.MemberGradeDTO"
		parameterType="Object">
		select
			a.buyer_id memberId,
			a.buyer_grade buyerGrade,
			b.is_buyer isBuyer,
			b.is_seller isSeller,
			b.can_mall_login canMallLogin,
			b.has_guarantee_license hasGuaranteeLicense,
			b.has_business_license hasBusinessLicense,
			b.account_type accountType,
			c.company_name companyName,
			c.artificial_person_mobile phoneNumber
           from buyer_grade_info a,member_base_info b,member_company_info c
		where b.id = a.buyer_id and b.id = c.member_id and c.buyer_seller_type=1
		<if test="memberBaseDTO.companyName != null and memberBaseDTO.companyName != ''">
		     <![CDATA[ and c.company_name like concat('%', #{memberBaseDTO.companyName}, '%') ]]>
		</if> 
		<if test="memberBaseDTO.phoneNumber != null and memberBaseDTO.phoneNumber != ''">
		    and c.artificial_person_mobile = #{memberBaseDTO.phoneNumber}
		</if> 
		<!-- 判断非会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 1">
		    and b.is_buyer = '1' and b.can_mall_login = '0'
		</if> 
		<if test="memberBaseDTO.memberType == null or memberBaseDTO.memberType == ''">
		    and b.is_buyer = '1' and b.can_mall_login = '1'
		</if> 
		<!-- 判断担保会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 3">
		    and b.is_buyer = '1' and b.can_mall_login = '1' and b.has_guarantee_license = '1'
		    and b.has_business_license = '0'
		</if> 
		<!-- 判断正式会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 2">
		    and b.is_buyer = '1' and b.can_mall_login = '1' and b.has_business_license = '1'
		</if> 
		<if test="memberBaseDTO.accountType != null and memberBaseDTO.accountType != ''">
		    and b.account_type = #{memberBaseDTO.accountType}
		</if> 
		<if test="pager.pageOffset != null and pager != null">
			limit #{pager.pageOffset},#{pager.rows}
		</if>
			
	</select>
	
	<!-- 根据会员名称，手机号，会员类型，账号类型查询会员等级分页信息 -->
	<select id="queryMemberGradeInfoCount" resultType="java.lang.Long" parameterType="Object">
		select count(0)
           from buyer_grade_info a,member_base_info b,member_company_info c
		where b.id = a.buyer_id and b.id = c.member_id and c.buyer_seller_type=1
		<if test="memberBaseDTO.companyName != null and memberBaseDTO.companyName != ''">
		     <![CDATA[ and c.company_name like concat('%', #{memberBaseDTO.companyName}, '%') ]]>
		</if> 
		<if test="memberBaseDTO.phoneNumber != null and memberBaseDTO.phoneNumber != ''">
		    and c.artificial_person_mobile = #{memberBaseDTO.phoneNumber}
		</if> 
		<!-- 判断非会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 1">
		    and b.is_buyer = '1' and b.can_mall_login = '0'
		</if> 
		<!-- 判断担保会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 3">
		    and b.is_buyer = '1' and b.can_mall_login = '1' and b.has_guarantee_license = '1'
		    and b.has_business_license = '0'
		</if> 
		<!-- 判断正式会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 2">
		    and b.is_buyer = '1' and b.can_mall_login = '1' and b.has_business_license = '1'
		</if> 
		<if test="memberBaseDTO.accountType != null and memberBaseDTO.accountType != ''">
		    and b.account_type = #{memberBaseDTO.accountType}
		</if> 
	</select>
	
	<!-- 根据会员名称，手机号，会员类型，账号类型查询会员等级分页信息 -->
	<select id="queryMemberGradeInfo" resultType="cn.htd.membercenter.dto.MemberGradeDTO"
		parameterType="Object">
		select
			a.buyer_id memberId,
			a.buyer_grade buyerGrade,
			a.is_vip isVip,
		    a.point_grade pointGrade,
		    a.member_package_type memberPackageType,
		    a.package_active_start_time packageActiveStartTime,
		    a.package_active_end_time packageActiveEndTime,
		    a.package_update_time packageUpdateTime,
			b.is_buyer isBuyer,
			b.is_seller isSeller,
			b.can_mall_login canMallLogin,
			b.has_guarantee_license hasGuaranteeLicense,
			b.has_business_license hasBusinessLicense,
			b.account_type accountType,
			c.company_name companyName,
			c.artificial_person_mobile phoneNumber
           from buyer_grade_info a,member_base_info b,member_company_info c
		where b.id = a.buyer_id and b.id = c.member_id
			and b.id = #{memberBaseDTO.memberId}
			and c.buyer_seller_type = '1'
	</select>
	
	
	<!-- 根据会员名称，手机号，会员类型，账号类型查询会员等级分页信息 -->
	<select id="queryMemberGradeListInfo4export" resultType="cn.htd.membercenter.dto.MemberGradeDTO"
		parameterType="Object">
		select
			a.buyer_id memberId,
			a.buyer_grade buyerGrade,
			b.is_buyer isBuyer,
			b.can_mall_login canMallLogin,
			b.has_guarantee_license hasGuaranteeLicense,
			b.has_business_license hasBusinessLicense,
			b.account_type accountType,
			c.company_name companyName,
			c.artificial_person_mobile phoneNumber
           from buyer_grade_info a,member_base_info b,member_company_info c
		where b.id = a.buyer_id and b.id = c.member_id
		<if test="memberBaseDTO.companyName != null and memberBaseDTO.companyName != ''">
		     <![CDATA[ and c.company_name like concat('%', #{memberBaseDTO.companyName}, '%') ]]>
		</if> 
		<if test="memberBaseDTO.phoneNumber != null and memberBaseDTO.phoneNumber != ''">
		    and c.artificial_person_mobile = #{memberBaseDTO.phoneNumber}
		</if> 
		<!-- 判断非会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 1">
		    and b.is_buyer = '1' and b.can_mall_login = '0'
		</if> 
		<!-- 判断担保会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 2">
		    and b.is_buyer = '1' and b.can_mall_login = '1' and b.has_guarantee_license = '1'
		    and b.has_business_license = '0'
		</if> 
		<!-- 判断正式会员的情况 -->
		<if test="memberBaseDTO.memberType != null and memberBaseDTO.memberType == 3">
		    and b.is_buyer = '1' and b.can_mall_login = '1' and b.has_business_license = '1'
		</if> 
		<if test="memberBaseDTO.accountType != null and memberBaseDTO.accountType != ''">
		    and b.account_type = #{memberBaseDTO.accountType}
		</if> 
	</select>
	
	
	<!-- 查询会员等级变动履历列表信息 -->
	<select id="queryMemberGradeHistoryListInfo" resultType="cn.htd.membercenter.dto.MemberGradeHistoryDTO"
		parameterType="Object">
		select
			a.grade_history_id gradeHistoryId,
			a.buyer_id buyerId,
			a.change_grade changeGrade,
			a.change_time changeTime,
			a.is_upgrade isUpgrade,
			a.after_grade afterGrade,
			a.delete_flag deleteFlag,
			a.create_id createId,
			a.create_name createName,
			a.create_time createTime
           from buyer_grade_change_history a
		where a.buyer_id = #{memberBaseDTO.memberId} and a.after_grade !=''
		<if test="memberBaseDTO.afterGrade != null and memberBaseDTO.afterGrade != ''">
		    and a.after_grade = #{memberBaseDTO.afterGrade}
		</if> 
		order by a.create_time desc
		<if test="pager.pageOffset != null and pager != null ">
			limit #{pager.pageOffset},#{pager.rows}
		</if>
	</select>
	
	<!-- 查询会员等级变动履历列表记录数 -->
	<select id="queryMemberGradeHistoryListInfoCount" resultType="java.lang.Long" parameterType="Object">
		select count(0)
            from buyer_grade_change_history a
		where a.buyer_id = #{memberBaseDTO.memberId} and a.after_grade !=''
		<if test="memberBaseDTO.afterGrade != null and memberBaseDTO.afterGrade != ''">
		    and a.after_grade = #{memberBaseDTO.afterGrade}
		</if> 
	</select>
	<!-- 查詢會員等級信息列表 -->
	<select id = "selectMemberGrade" resultType="cn.htd.membercenter.dto.MemberGradeDTO">
		select 
		buyer_id memberId,
		buyer_grade buyerGrade,
		is_vip isVip,
		point_grade pointGrade
		from buyer_grade_info a where a.buyer_grade = #{buyerGrade}
		<if test = "buyerGrade !=null and buyerGrade != 6">
			 and a.is_vip = 0
		</if>
		<if test = "buyerGrade !=null and buyerGrade == 6">
			 and a.is_vip = 1
		</if>
	</select>
	<!-- 变更会员等级信息 -->
	<update id="updateMemberGradeInfo" parameterType="Object">
		update buyer_grade_info set
			<if test="memberBaseDTO.isVip != null and memberBaseDTO.isVip != ''">
			   	is_vip = #{memberBaseDTO.isVip},
			</if> 
			<if test="memberBaseDTO.buyerGrade != null and memberBaseDTO.buyerGrade != ''">
			   	buyer_grade = #{memberBaseDTO.buyerGrade}
			</if> 
		where buyer_id = #{memberBaseDTO.memberId}
	</update>
	
	<insert id="insertMemberGradeHistoryInfo" parameterType="Object"
		useGeneratedKeys="true">
		<![CDATA[
		insert into buyer_grade_change_history(
			buyer_id,
			change_grade,
			change_time,
			is_upgrade,
			after_grade,
			create_id,
			create_name,
			create_time,
			modify_id,
			modify_name,
			modify_time
		) values (
			#{bgch.buyerId},
			#{bgch.changeGrade},
			now(),
			#{bgch.isUpgrade},
			#{bgch.afterGrade},
			#{bgch.operateId},
			#{bgch.operateName},
			now(),
			#{bgch.operateId},
			#{bgch.operateName},
			now()
		)
		]]>
	</insert>
	
	<select id="hasCalculateOrder" resultType="java.lang.Long"
		parameterType="Object">
		select count(0)
            from buyer_point_history a
		where a.buyer_id = #{memberId} and order_id = #{orderNo}
	</select>
	
	<select id="getHTDMemberGrade" resultType="cn.htd.membercenter.dto.BuyerGradeInfoDTO"
		parameterType="Object">
		select
			buyer_id as buyerId, buyer_grade as buyerGrade, is_vip as isVip, 
			point_grade as pointGrade, is_upgrade as isUpgrade, is_sb_upgrade as isSbUpgrade, 
			year_exp as yearExp,    month_exp as monthExp, level_exp as  levelExp, 
			year_order_level as yearOrderLevel, year_finance_level as yearFinanceLevel, 
		    year_order_amount as yearOrderAmount, year_finance_avg as yearFinanceAvg, 
		    month_order_amount as monthOrderAmount, month_finance_avg as monthFinanceAvg,
		     month_order_exp as monthOrderExp, 
		    month_finance_exp as monthFinanceExp, create_id as createId, 
		    create_name as createName, create_time as createTime, 
		    modify_id as modifyId, modify_name as modifyName, modify_time as modifyTime
           from buyer_grade_info
		where  buyer_id =  #{memberId}
	</select>
	
	<!-- 查询会员分级规则信息 -->
	<select id="queryMemberScoreSetList" resultType="cn.htd.membercenter.dto.BuyerScoreIntervalDTO"
		parameterType="Object">
	     select a.id,a.interval_type intervalType,
			a.from_amount fromAmount,
			a.to_amount toAmount,
			a.score score from buyer_score_interval a 
			where a.interval_type = #{buyerScoreIntervalDTO.intervalType}
			and a.delete_flag = 0
			order by from_amount
	</select>
	
	<insert id="insertPointHistoryInfo" parameterType="Object"
		useGeneratedKeys="true">
		<![CDATA[
		INSERT INTO buyer_point_history (
buyer_id, point_type, order_id, 
provide_point, provide_time, is_visible, 
delete_flag, create_id, create_name, 
create_time, modify_id, modify_name, 
modify_time) VALUES (
			#{bgch.buyerId},
			#{bgch.pointType},
			#{bgch.orderId},
			#{bgch.providePoint},
			#{bgch.provideTime},
			#{bgch.isVisible},
			0,
			#{bgch.createId},
			#{bgch.createName},
			now(),
			#{bgch.modifyId},
			#{bgch.modifyName},
			now()
		)
		]]>
	</insert>
	<!-- 查询会员升级规则信息 -->
	<select id="queryBuyerGradeList" resultType="cn.htd.membercenter.dto.BuyerGradeIntervalDTO"
		parameterType="Object">
	   select a.buyer_level buyerLevel,
		a.from_score fromScore,
		a.to_score toScore,
		a.lowest_point lowestPoint  from buyer_grade_interval a
		where a.delete_flag=0
		order by a.buyer_level
	</select>
	
	<update id="updateByPrimaryKeySelective" parameterType="cn.htd.membercenter.dto.BuyerGradeInfoDTO">
    update buyer_grade_info
    <set>
      <if test="buyerGrade != null">
        buyer_grade = #{buyerGrade,jdbcType=VARCHAR},
      </if>
      <if test="isVip != null">
        is_vip = #{isVip,jdbcType=TINYINT},
      </if>
      <if test="pointGrade != null">
        point_grade = #{pointGrade,jdbcType=BIGINT},
      </if>
      <if test="isUpgrade != null">
        is_upgrade = #{isUpgrade,jdbcType=CHAR},
      </if>
      <if test="isSbUpgrade != null">
        is_sb_upgrade = #{isSbUpgrade,jdbcType=CHAR},
      </if>
      <if test="yearExp != null">
        year_exp = #{yearExp,jdbcType=DECIMAL},
      </if>
      <if test="monthExp != null">
        month_exp = #{monthExp,jdbcType=DECIMAL},
      </if>
      <if test="levelExp != null">
        level_exp = #{levelExp,jdbcType=DECIMAL},
      </if>
      <if test="yearOrderLevel != null">
        year_order_level = #{yearOrderLevel,jdbcType=BIGINT},
      </if>
      <if test="yearFinanceLevel != null">
        year_finance_level = #{yearFinanceLevel,jdbcType=BIGINT},
      </if>
      <if test="yearOrderAmount != null">
        year_order_amount = #{yearOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="yearFinanceAvg != null">
        year_finance_avg = #{yearFinanceAvg,jdbcType=DECIMAL},
      </if>
      <if test="monthOrderAmount != null">
        month_order_amount = #{monthOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="monthFinanceAvg != null">
        month_finance_avg = #{monthFinanceAvg,jdbcType=DECIMAL},
      </if>
      <if test="monthOrderExp != null">
        month_order_exp = #{monthOrderExp,jdbcType=DECIMAL},
      </if>
      <if test="monthFinanceExp != null">
        month_finance_exp = #{monthFinanceExp,jdbcType=DECIMAL},
      </if>
      <if test="modifyId != null">
        modify_id = #{modifyId,jdbcType=BIGINT},
      </if>
      <if test="modifyName != null">
        modify_name = #{modifyName,jdbcType=VARCHAR},
      </if>
        modify_time = now()
    </set>
    where buyer_id = #{buyerId,jdbcType=BIGINT}
  </update>
  
  
  <select id="getFinanceDailyAmountSync" resultType="cn.htd.membercenter.dto.BuyerFinanceSyncDTO"
		parameterType="Object">
	   select 
    id, finance_type as financeType, last_date as lastDate, erp_code as erpCode, 
    job_flag as jobFlag, delete_flag as deleteFlag, create_id as createId, 
		    create_name as createName, create_time as createTime, 
		    modify_id as modifyId, modify_name as modifyName, modify_time as modifyTime
    from buyer_finance_sync
	</select>
	
	
	
	<select id="getHTDUserDailyFinanceHis" resultType="cn.htd.membercenter.dto.BuyerFinanceHistoryDTO"
		parameterType="Object">
	   SELECT id, finance_type as financeType, erp_code as erpCode, target_date as targetDate, 
	   amount, 
	   create_id as createId, 
		    create_name as createName, create_time as createTime, 
		    modify_id as modifyId, modify_name as modifyName, modify_time as modifyTime
	FROM buyer_finance_history
	where erp_code = #{bfh.erpCode}
	and finance_type = #{bfh.financeType}
	<![CDATA[ and unix_timestamp(target_date) <= unix_timestamp(#{bfh.targetDate})  ]]>
	order by targetDate DESC
	</select>
	
	
	<insert id="saveHTDUserDailyFinanceHis" parameterType="cn.htd.membercenter.dto.BuyerFinanceHistoryDTO">
    insert into buyer_finance_history ( finance_type, erp_code, 
      target_date, amount, create_id, 
      create_name, create_time, modify_id, 
      modify_name, modify_time)
    values ( #{hisModel.financeType,jdbcType=VARCHAR}, #{hisModel.erpCode,jdbcType=VARCHAR}, 
      #{hisModel.targetDate,jdbcType=TIMESTAMP}, #{hisModel.amount,jdbcType=DECIMAL}, 1, 
     'SYS' , now(), 1, 
     'SYS' , now())
  </insert>
  
	
	<update id="updateHTDUserDailyFinanceHis" parameterType="cn.htd.membercenter.dto.BuyerFinanceHistoryDTO">
    update buyer_finance_history
    <set>
      <if test="hisModel.financeType != null">
        finance_type = #{hisModel.financeType,jdbcType=VARCHAR},
      </if>
      <if test="hisModel.erpCode != null">
        erp_code = #{hisModel.erpCode,jdbcType=VARCHAR},
      </if>
      <if test="hisModel.targetDate != null">
        target_date = #{hisModel.targetDate,jdbcType=TIMESTAMP},
      </if>
      <if test="hisModel.amount != null">
        amount = #{hisModel.amount,jdbcType=DECIMAL},
      </if>
     
      <if test="hisModel.modifyId != null">
        modify_id = #{hisModel.modifyId,jdbcType=BIGINT},
      </if>
      <if test="hisModel.modifyName != null">
        modify_name = #{hisModel.modifyName,jdbcType=VARCHAR},
      </if>
        modify_time = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
	
	<insert id="saveBuyerFinanceSync" parameterType="cn.htd.membercenter.dto.BuyerFinanceSyncDTO">
    insert into buyer_finance_sync ( finance_type, last_date, 
      erp_code,  delete_flag, 
      create_id, create_name, create_time, 
      modify_id, modify_name, modify_time
      )
    values ( #{syncModel.financeType,jdbcType=VARCHAR}, #{syncModel.lastDate,jdbcType=TIMESTAMP}, 
      #{syncModel.erpCode,jdbcType=VARCHAR}, #{syncModel.deleteFlag,jdbcType=TINYINT}, 
      1, 'SYS', now(), 
      1, 'SYS', now()
      )
  </insert>
	
	
	<update id="updateBuyerFinanceSync" parameterType="cn.htd.membercenter.dto.BuyerFinanceSyncDTO">
    update buyer_finance_sync
    <set>
      <if test="syncModel.lastDate != null">
        last_date = #{syncModel.lastDate,jdbcType=TIMESTAMP},
      </if>
      <if test="syncModel.erpCode != null">
        erp_code = #{syncModel.erpCode,jdbcType=VARCHAR},
      </if>
      <if test="syncModel.jobFlag != null">
        job_flag = #{syncModel.jobFlag,jdbcType=TINYINT},
      </if>
      <if test="syncModel.deleteFlag != null">
        delete_flag = #{syncModel.deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="syncModel.modifyId != null">
        modify_id = #{syncModel.modifyId,jdbcType=BIGINT},
      </if>
      <if test="syncModel.modifyName != null">
        modify_name = #{syncModel.modifyName,jdbcType=VARCHAR},
      </if>
     modify_time =now()
    </set>
    where finance_type = #{syncModel.financeType,jdbcType=VARCHAR}
  </update>
  
  
  <select id = "getHTDAllMemberCnt" resultType="cn.htd.membercenter.dto.MemberImportSuccInfoDTO">
		SELECT m.id memberId, m.member_code memberCode
	FROM member_base_info m
	where m.can_mall_login=1 and m.status = '1' and m.is_buyer=1
	</select>
	
	
	<select id = "getHTDUserDailyAmount" resultType="cn.htd.membercenter.dto.BuyerFinanceExpDTO">
		SELECT id, finance_type financeType, buyer_id buyerId, daily_amount_avg dailyAmountAvg, finance_exp financeExp

		FROM buyer_finance_exp
		where buyer_id=#{buyerId} and finance_type=#{pointType}
	</select>
	
	
	<insert id="saveBuyerFinanceExp" parameterType="cn.htd.membercenter.dto.BuyerFinanceExpDTO">
    insert into buyer_finance_exp ( finance_type, buyer_id, 
      daily_amount_avg, finance_exp, create_id, 
      create_name, create_time, modify_id, 
      modify_name, modify_time)
    values ( #{buyerFinanceExpDTO.financeType,jdbcType=VARCHAR}, #{buyerFinanceExpDTO.buyerId,jdbcType=BIGINT}, 
      #{buyerFinanceExpDTO.dailyAmountAvg,jdbcType=DECIMAL}, #{buyerFinanceExpDTO.financeExp,jdbcType=DECIMAL},
       1, 'SYS', now(), 
      1, 'SYS', now()
      )
  </insert>
  
  <update id="updateBuyerFinanceExp" parameterType="cn.htd.membercenter.dto.BuyerFinanceExpDTO">
    update buyer_finance_exp
    <set>
      <if test="buyerFinanceExpDTO.dailyAmountAvg != null">
        daily_amount_avg = #{buyerFinanceExpDTO.dailyAmountAvg,jdbcType=DECIMAL},
      </if>
      <if test="buyerFinanceExpDTO.financeExp != null">
        finance_exp = #{buyerFinanceExpDTO.financeExp,jdbcType=DECIMAL},
      </if>
      <if test="buyerFinanceExpDTO.modifyId != null">
        modify_id = #{buyerFinanceExpDTO.modifyId,jdbcType=BIGINT},
      </if>
      <if test="buyerFinanceExpDTO.modifyName != null">
        modify_name = #{buyerFinanceExpDTO.modifyName,jdbcType=VARCHAR},
      </if>
     modify_time =now()
    </set>
    where finance_type = #{buyerFinanceExpDTO.financeType,jdbcType=VARCHAR}
    and buyer_id = #{buyerFinanceExpDTO.buyerId,jdbcType=BIGINT}
  </update>
  
  <select id = "selectMemberByGrade" resultType="cn.htd.membercenter.dto.MemberGradeDTO">
  		select 
			a.buyer_id memberId,
			a.buyer_grade buyerGrade,
			a.is_vip isVip,
			c.company_name companyName,
			m.member_code memberCode ,
			a.point_grade pointGrade
			from member_base_info m, buyer_grade_info a 
			left join member_company_info c on c.member_id=a.buyer_id and c.buyer_seller_type=1
			 where m.id=a.buyer_id and m.status='1'
			 <if test="buyerGrade != null">
        			and a.buyer_grade = #{buyerGrade} 
     		 </if>
	</select>
	
	<insert id="insertGrade" parameterType="cn.htd.membercenter.dto.BuyerGradeInfoDTO">
	insert into buyer_grade_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="buyerGrade.buyerId != null">
        buyer_id,
      </if>
      <if test="buyerGrade.buyerGrade != null">
        buyer_grade,
      </if>
      <if test="buyerGrade.isVip != null">
        is_vip,
      </if>
      <if test="buyerGrade.pointGrade != null">
        point_grade,
      </if>
      <if test="buyerGrade.isUpgrade != null">
        is_upgrade,
      </if>
      <if test="buyerGrade.isSbUpgrade != null">
        is_sb_upgrade,
      </if>
      <if test="buyerGrade.yearExp != null">
        year_exp,
      </if>
      <if test="buyerGrade.monthExp != null">
        month_exp,
      </if>
      <if test="buyerGrade.levelExp != null">
        level_exp,
      </if>
      <if test="buyerGrade.yearOrderLevel != null">
        year_order_level,
      </if>
      <if test="buyerGrade.yearFinanceLevel != null">
        year_finance_level,
      </if>
      <if test="buyerGrade.yearOrderAmount != null">
        year_order_amount,
      </if>
      <if test="buyerGrade.yearFinanceAvg != null">
        year_finance_avg,
      </if>
      <if test="buyerGrade.monthOrderAmount != null">
        month_order_amount,
      </if>
      <if test="buyerGrade.monthFinanceAvg != null">
        month_finance_avg,
      </if>
      <if test="buyerGrade.monthOrderExp != null">
        month_order_exp,
      </if>
      <if test="buyerGrade.monthFinanceExp != null">
        month_finance_exp,
      </if>
      <if test="buyerGrade.createId != null">
        create_id,
      </if>
      <if test="buyerGrade.createName != null">
        create_name,
      </if>
        create_time,
      <if test="buyerGrade.modifyId != null">
        modify_id,
      </if>
      <if test="buyerGrade.modifyName != null">
        modify_name,
      </if>
        modify_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="buyerGrade.buyerId != null">
        #{buyerGrade.buyerId,jdbcType=BIGINT},
      </if>
      <if test="buyerGrade.buyerGrade != null">
        #{buyerGrade.buyerGrade,jdbcType=VARCHAR},
      </if>
      <if test="buyerGrade.isVip != null">
        #{buyerGrade.isVip,jdbcType=TINYINT},
      </if>
      <if test="buyerGrade.pointGrade != null">
        #{buyerGrade.pointGrade,jdbcType=BIGINT},
      </if>
      <if test="buyerGrade.isUpgrade != null">
        #{buyerGrade.isUpgrade,jdbcType=CHAR},
      </if>
      <if test="buyerGrade.isSbUpgrade != null">
        #{buyerGrade.isSbUpgrade,jdbcType=CHAR},
      </if>
      <if test="buyerGrade.yearExp != null">
        #{buyerGrade.yearExp,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.monthExp != null">
        #{buyerGrade.monthExp,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.levelExp != null">
        #{buyerGrade.levelExp,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.yearOrderLevel != null">
        #{buyerGrade.yearOrderLevel,jdbcType=BIGINT},
      </if>
      <if test="buyerGrade.yearFinanceLevel != null">
        #{buyerGrade.yearFinanceLevel,jdbcType=BIGINT},
      </if>
      <if test="buyerGrade.yearOrderAmount != null">
        #{buyerGrade.yearOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.yearFinanceAvg != null">
        #{buyerGrade.yearFinanceAvg,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.monthOrderAmount != null">
        #{buyerGrade.monthOrderAmount,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.monthFinanceAvg != null">
        #{buyerGrade.monthFinanceAvg,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.monthOrderExp != null">
        #{buyerGrade.monthOrderExp,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.monthFinanceExp != null">
        #{buyerGrade.monthFinanceExp,jdbcType=DECIMAL},
      </if>
      <if test="buyerGrade.createId != null">
        #{buyerGrade.createId,jdbcType=BIGINT},
      </if>
      <if test="buyerGrade.createName != null">
        #{buyerGrade.createName,jdbcType=VARCHAR},
      </if>
        now(),
      <if test="buyerGrade.modifyId != null">
        #{buyerGrade.modifyId,jdbcType=BIGINT},
      </if>
      <if test="buyerGrade.modifyName != null">
        #{buyerGrade.modifyName,jdbcType=VARCHAR},
      </if>
        now()
    </trim>
  </insert>
  
  <!-- 根据buyerId删除等级 -->
   <update id="deleteGrade" parameterType="Object">
       delete from buyer_grade_info 
       where 
       buyer_id = #{buyerId}
   </update>
   
  <!-- 变更会员等级信息 -->
  <update id="modifyMemberGradeAndPackageTypeById" parameterType="Object">
		update buyer_grade_info set
			<if test="memberBaseDTO.isVip != null and memberBaseDTO.isVip != ''">
			   	is_vip = #{memberBaseDTO.isVip},
			</if> 
			<if test="memberBaseDTO.buyerGrade != null and memberBaseDTO.buyerGrade != ''">
			   	buyer_grade = #{memberBaseDTO.buyerGrade},
			</if> 
			<if test="memberBaseDTO.memberPackageType != null ">
			   	member_package_type = #{memberBaseDTO.memberPackageType},
			</if> 
			<if test="memberBaseDTO.packageActiveStartTime != null ">
			   	package_active_start_time = #{memberBaseDTO.packageActiveStartTime},
			</if> 
			<if test="memberBaseDTO.packageActiveStartTime == null ">
			   	package_active_start_time = '0000-00-00 00:00:00',
			</if> 
			<if test="memberBaseDTO.packageActiveEndTime != null ">
			   	package_active_end_time = #{memberBaseDTO.packageActiveEndTime},
			</if> 
			<if test="memberBaseDTO.packageActiveEndTime == null ">
			   	package_active_end_time = '0000-00-00 00:00:00',
			</if> 
			<if test="memberBaseDTO.packageUpdateTime != null ">
			   	package_update_time = #{memberBaseDTO.packageUpdateTime},
			</if> 
			<if test="memberBaseDTO.operateId != null and memberBaseDTO.operateId != ''">
		        modify_id = #{memberBaseDTO.operateId},
		    </if>
		    <if test="memberBaseDTO.operateName != null and memberBaseDTO.operateName != ''">
		        modify_name = #{memberBaseDTO.operateName},
		    </if>
		        modify_time = now()
		where buyer_id = #{memberBaseDTO.memberId}
  </update>
  
  <select id="getYearCnt" resultType="java.lang.Integer" parameterType="Object">
		SELECT count(*)
	FROM buyer_grade_info
	
	where year_exp>0
	</select>
  
  <select id="getMonthCnt" resultType="java.lang.Integer" parameterType="Object">
		SELECT count(*)
	FROM buyer_grade_info
	
	where month_exp>0
	</select>
  
</mapper>